[{"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/index.js":"1","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/reportWebVitals.js":"2","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/App.js":"3","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Login.js":"4","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Register.js":"5","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Dashboard.js":"6","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Status.js":"7","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Risk.js":"8","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/ContactTrace.js":"9"},{"size":660,"mtime":1607894054567,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607894054567,"results":"12","hashOfConfig":"11"},{"size":3750,"mtime":1607929429758,"results":"13","hashOfConfig":"11"},{"size":2140,"mtime":1607894054566,"results":"14","hashOfConfig":"11"},{"size":1967,"mtime":1607894054566,"results":"15","hashOfConfig":"11"},{"size":1881,"mtime":1607929444322,"results":"16","hashOfConfig":"11"},{"size":1966,"mtime":1607906905065,"results":"17","hashOfConfig":"11"},{"size":2182,"mtime":1607906905064,"results":"18","hashOfConfig":"11"},{"size":6202,"mtime":1607929432595,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jpyl7h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/index.js",[],["44","45"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/reportWebVitals.js",[],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/App.js",["46"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Login.js",["47","48"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const { username, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username, password };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status == 200) {\n        const parseRes = await response.json();\n        setAuth(true);\n        localStorage.setItem(\"token\", parseRes.username);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Login</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/register\">register</Link>\n    </Fragment>\n  );\n};\n\nexport default Login;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Register.js",["49","50"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username, password };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // console.log(parseRes);\n      if (response.status == 200) {\n        const parseRes = await response.json();\n        setAuth(true);\n        localStorage.setItem(\"token\", parseRes.username);\n      }\n      // if (parseRes.jwtToken) {\n      //   setAuth(true);\n      //   // toast.success(\"Register Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   // toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Register</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/login\">login</Link>\n    </Fragment>\n  );\n};\n\nexport default Register;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Dashboard.js",["51"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Status.js",["52","53"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Status = ({updateStatus, status}) => {\nconst [myStatus, updateMyStatus] = useState(status)\nconst onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username: localStorage.getItem(\"token\"), status: myStatus };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/status\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status === 200) {\n        updateStatus(myStatus);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Update COVID Status</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"radio\"\n          checked = {myStatus === \"positive\"}\n          name=\"positive\"\n          value=\"positive\"\n          onChange={e => updateMyStatus(\"positive\")}\n          className=\"form-control my-3\"\n        /> Positive\n        <input\n          type=\"radio\"\n          checked = {myStatus === \"negative\"}\n          name=\"negative\"\n          value=\"negative\"\n          onChange={e => updateMyStatus(\"negative\")}\n          className=\"form-control my-3\"\n        /> Negative\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Status;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Risk.js",["54","55"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Risk = ({updateRisk, risk}) => {\nconst [myRisk, updateMyRisk] = useState(risk)\nconst onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username: localStorage.getItem(\"token\"), risk: myRisk };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/risk\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status === 200) {\n        updateRisk(myRisk);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h3 className=\"mt-5\">Log your current symptoms!</h3>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"some \"}\n          name=\"fever\"\n          value=\"fever\"\n          onChange={e => updateMyRisk(\"some \")}\n          className=\"form-control my-3\"\n        /> Feel like you have had a fever?\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"some\"}\n          name=\"chills\"\n          value=\"chills\"\n          onChange={e => updateMyRisk(\"some\")}\n          className=\"form-control my-3\"\n        /> Chills?\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"low\"}\n          name=\"low\"\n          value=\"low\"\n          onChange={e => updateMyRisk(\"low\")}\n          className=\"form-control my-3\"\n        /> None of the above\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Risk;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/ContactTrace.js",["56"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction compileDataArr(data) {\n    let retArr = [];\n    let i;\n    for (i = 0; i < count(data.rows); i++) {\n        retArr.push(JSON.parse(data.rows[i]).user2);\n    }\n    return retArr;\n}\n\nfunction compileDataStatus(data) {\n    let retStr;\n    retStr = JSON.parse(data).status;\n    return retStr;\n}\n\n// function compileDataRisk(data) {\n//     let retStr = JSON.parse(data).risk;\n//     return retStr;\n// }\n\nfunction getAllConnections(username) {\n    let user = username;\n    let retDat;\n    fetch('http://localhost:3001/authentication/getAllConnections', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({user}),\n    })\n    .then(response => response.json())\n    .then(data => {\n        retDat = compileDataArr(data);\n        return retDat;\n      //getUsers();\n    });\n}\n\n  function getStatus(username) {\n    let user = username;\n    let retDat;\n    fetch('http://localhost:3001/authentication/getStatus', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({user}),\n    })\n    .then(response => response.json())\n    .then(data => {\n        retDat = compileDataStatus(data);\n        return retDat;\n    });\n}\n\n//   function getRisk(username){\n//     let user = username;\n//     fetch('http://localhost:3001/authentication/getRisk', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({user}),\n//     })\n//       .then(response => response.json())\n//       .then(data => {\n//         retDat = compileDataRisk(data);\n//         return retDat;\n//       });\n//   }\n\n  function updateRisk(username) {\n    let user = username;\n    fetch('http://localhost:3001/risk', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({user}),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      //getUsers();\n    });\n}\n\n\n\n// import { toast } from \"react-toastify\";\n\n// const Status = ({updateStatus, status}) => {\n// const [myStatus, updateMyStatus] = useState(status)\n// const onSubmitForm = async e => {\n//     e.preventDefault();\n//     try {\n\n  const contactTrace = ({username}) => {\n//     const [myContactTrace, updateContactTrace] = useState(username)\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n\n\n    function contactTrace(username){\n      let user = username;\n      let primary = [];\n      let secondary = [];\n      let tertiary = [];\n      let notifications = [];\n      let count = 0;\n      let riskCheck = 0;\n      let i;\n      let j;\n      let k;\n      \n      primary = getAllConnections(user, user, user);\n      for (i = 0; i < primary.length; i++){\n        count++;\n        secondary.length = 0; //resets second array\n        if (getStatus(primary[i]) === \"positive\") {\n          notifications.push(\"You came in contact with \" + primary[i] + \" who has tested positive for covid. You need to get tested!\");\n          riskCheck = 1;\n        }\n        // else if (getRisk(primary[i]) === \"yes\") {\n        //   notifications.push(\"You came in contact with \" + primary[i] + \" who is at risk of being positive for covid. You need to get tested!\");\n        //   riskCheck = 1;\n        // }\n        secondary = getAllConnections(primary[i], user, primary[i]);\n          for (j = 0; j < secondary.length; j++){\n            count++;\n            tertiary.length = 0; //resets tert array\n            if (getStatus(secondary[j]) === \"positive\") {\n              notifications.push(\"You came in secondary contact with \" + secondary[j] + \" who has tested positive for covid. You need to get tested!\");\n              riskCheck = 1;\n            }\n            // else if (getRisk(secondary[j]) === \"yes\") {\n            //   notifications.push(\"You came in secondary contact with \" + secondary[j] + \" who is at risk of being positive for covid. You need to get tested!\");\n            //   riskCheck = 1;\n            // }\n            tertiary = getAllConnections(secondary[j], user, primary[i]);\n              for (k = 0; k < tertiary.length; k++){\n                count++;\n                if (getStatus(tertiary[k]) === \"positive\") {\n                  notifications.push(\"You came in tertiary contact with \" + secondary[j] + \" who has tested positive for covid. You need to get tested!\");\n                  riskCheck = 1;\n                }\n                // else if (getRisk(tertiary[k]) === \"yes\") {\n                //   notifications.push(\"You came in tertiary contact with \" + secondary[j] + \" who is at risk of being positive for covid. You need to get tested!\");\n                //   riskCheck = 1;\n                // }\n            }\n        }\n      }\n      if (riskCheck === 1) {\n        updateRisk(user);\n      }\n    //   notifications.forEach(function(item){\n    //     //document.getElementById(\"notifications\").innerHTML = document.getElementById(\"notifications\").innerHTML + \"<br>\" + item + \"<br>\";\n    //   }) //probably need to populate innerhtml w this\n\n    \n\n\n    // return (\n    //     <Fragment>\n    //       <h3 className=\"mt-5\">Contact Trace</h3>\n    //       <form onSubmit={onSubmitForm}>\n    //         <input\n    //           type=\"radio\"\n    //           checked = {myStatus === \"positive\"}\n    //           name=\"positive\"\n    //           value=\"positive\"\n    //           onChange={e => updateMyStatus(\"positive\")}\n    //           className=\"form-control my-3\"\n    //         /> Positive\n    //         <input\n    //           type=\"radio\"\n    //           checked = {myStatus === \"negative\"}\n    //           name=\"negative\"\n    //           value=\"negative\"\n    //           onChange={e => updateMyStatus(\"negative\")}\n    //           className=\"form-control my-3\"\n    //         /> Negative\n    //         <button className=\"btn btn-success btn-block\">Submit</button>\n    //       </form>\n    //     </Fragment>\n    //   );\n  }\n\n //document.getElementById(\"contacttrace\").addEventListener(\"click\", contactTrace, false);",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":59,"column":37,"nodeType":"63","messageId":"64","endLine":59,"endColumn":46},{"ruleId":"61","severity":1,"message":"65","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":33,"column":27,"nodeType":"68","messageId":"69","endLine":33,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":31,"column":27,"nodeType":"68","messageId":"69","endLine":31,"endColumn":29},{"ruleId":"61","severity":1,"message":"70","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":20},{"ruleId":"61","severity":1,"message":"71","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":24},{"ruleId":"61","severity":1,"message":"71","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"72","line":194,"column":91},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ContactTrace' is defined but never used.","'Link' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 192 | \u001b[39m  }\u001b[0m\n\u001b[0m \u001b[90m 193 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 | \u001b[39m \u001b[90m//document.getElementById(\"contacttrace\").addEventListener(\"click\", contactTrace, false);\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m                                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]