[{"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/index.js":"1","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/reportWebVitals.js":"2","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/App.js":"3","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Login.js":"4","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Register.js":"5","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Dashboard.js":"6","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Status.js":"7","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Risk.js":"8","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/ContactTrace.js":"9","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Connects.js":"10","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/CheckUser.js":"11"},{"size":660,"mtime":1607894054567,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607894054567,"results":"14","hashOfConfig":"13"},{"size":3750,"mtime":1608019411985,"results":"15","hashOfConfig":"13"},{"size":2067,"mtime":1608020778006,"results":"16","hashOfConfig":"13"},{"size":1967,"mtime":1607894054566,"results":"17","hashOfConfig":"13"},{"size":3831,"mtime":1608025885598,"results":"18","hashOfConfig":"13"},{"size":1564,"mtime":1607937275733,"results":"19","hashOfConfig":"13"},{"size":3047,"mtime":1607937275733,"results":"20","hashOfConfig":"13"},{"size":5600,"mtime":1608025885597,"results":"21","hashOfConfig":"13"},{"size":3591,"mtime":1607988179408,"results":"22","hashOfConfig":"13"},{"size":6156,"mtime":1608027152376,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jpyl7h",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/index.js",[],["53","54"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/reportWebVitals.js",[],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/App.js",["55"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Login.js",["56","57"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const { username, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username, password };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status == 200) {\n        const parseRes = await response.json();\n        setAuth(true);\n        localStorage.setItem(\"token\", parseRes.username);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Login</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/register\">register</Link>\n    </Fragment>\n  );\n};\n\nexport default Login;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Register.js",["58","59"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username, password };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // console.log(parseRes);\n      if (response.status == 200) {\n        const parseRes = await response.json();\n        setAuth(true);\n        localStorage.setItem(\"token\", parseRes.username);\n      }\n      // if (parseRes.jwtToken) {\n      //   setAuth(true);\n      //   // toast.success(\"Register Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   // toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Register</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/login\">login</Link>\n    </Fragment>\n  );\n};\n\nexport default Register;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Dashboard.js",["60"],"/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Status.js",["61","62"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Status = ({updateStatus, status}) => {\nconst [myStatus, updateMyStatus] = useState(status)\nconst onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username: localStorage.getItem(\"token\"), status: myStatus };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/status\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status === 200) {\n        updateStatus(myStatus);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Update COVID Status</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"radio\"\n          checked = {myStatus === \"positive\"}\n          name=\"positive\"\n          value=\"positive\"\n          onChange={e => updateMyStatus(\"positive\")}\n          className=\"form-control my-3\"\n        /> Positive\n        <input\n          type=\"radio\"\n          checked = {myStatus === \"negative\"}\n          name=\"negative\"\n          value=\"negative\"\n          onChange={e => updateMyStatus(\"negative\")}\n          className=\"form-control my-3\"\n        /> Negative\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Status;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Risk.js",["63","64"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\nconst Risk = ({updateRisk, risk}) => {\nconst [myRisk, updateMyRisk] = useState(risk)\nconst onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { username: localStorage.getItem(\"token\"), risk: myRisk };\n      const response = await fetch(\n        \"http://localhost:3001/authentication/risk\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      // const parseRes = await response.json();\n      // setAuth(true);\n      if (response.status === 200) {\n        updateRisk(myRisk);\n      }\n      // const parseRes = await response.json();\n      // console.log(parseRes);\n\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n      //   setAuth(true);\n      //   toast.success(\"Logged in Successfully\");\n      // } else {\n      //   setAuth(false);\n      //   toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h3 className=\"mt-5\">Log your current symptoms!</h3>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"some \"}\n          name=\"fever\"\n          value=\"fever\"\n          onChange={e => updateMyRisk(\"some \")}\n          className=\"form-control my-3\"\n        /> Feel like you have had a fever?\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"some\"}\n          name=\"chills\"\n          value=\"chills\"\n          onChange={e => updateMyRisk(\"some\")}\n          className=\"form-control my-3\"\n        /> Chills?\n        <input\n          type=\"checkbox\"\n          checked = {myRisk === \"low\"}\n          name=\"low\"\n          value=\"low\"\n          onChange={e => updateMyRisk(\"low\")}\n          className=\"form-control my-3\"\n        /> None of the above\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Risk;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/ContactTrace.js",["65","66","67","68","69"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction Connection(userOne, userTwo, userTwoStatus) {\n  this.user1 = userOne;\n  this.user2 = userTwo;\n  this.user2status = userTwoStatus;\n}\n\nfunction compileDataArr(data) { //take second parameter x username\n  let retArr = [];\n  let i;\n  let count = Object.keys(data).length;\n  for (i = 0; i < count; i++) {\n      retArr.push(new Connection(data[i].user1, data[i].user2, data[i].user2status));\n      \n      }\n    return retArr;\n}\n\n\n///GET CACHE\n\nconst getCache = async() => {\n  // function getCache(){\n    try {\n      //let u2status = \"positive\"; // change back to positive\n      let x;\n      const res = await fetch('http://localhost:3001/other/cacheDatabase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({}),\n      });\n\n      const r = await res.json();\n      //console.log(r);\n      x = compileDataArr(r);\n      console.log(x);\n      return x;\n      //Promise.resolve(x);\n      // store(x);\n      //console.log(x[0].user1);\n      //return x;\n      // if (res.status === 200) {\n      //   console.log(\"sup\");\n      // }\n      //this.setState({Cache: x});\n    }\n    catch (err) {\n       console.error(err.message);\n    }\n    //return getCache();\n    \n    // .then(response => response.json())\n    // .then(data => {\n    //     x = compileDataArr(data);\n    //     console.log(data);\n    //     console.log(x);\n        //return getCache;\n        //return retDat;\n        // retDat = await res.json();\n        // dat = compileDataArr(retDat);\n        // return dat;\n}\n\n\n\n  function updateRisk(userUp) { //this updates to positive\n    let user = userUp;\n    let riskStatus = 'some';\n    fetch('http://localhost:3001/authentication/risk', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username : user, risk : riskStatus}),\n    })\n    .then(data => {\n      //console.log(data);\n      //getUsers();\n    });\n  }\n\n\n\n// import { toast } from \"react-toastify\";\n\n// const Status = ({updateStatus, status}) => {\n// const [myStatus, updateMyStatus] = useState(status)\n// const onSubmitForm = async e => {\n//     e.preventDefault();\n//     try {\n//ES6 -> arrow functions\n//parameter => \n//\n  function networkStatus(num, pos) {\n    let str;\n    if (num == 0) {\n      str = \"Wow! You have 0 connections. Great job, you are being very safe!\";\n    }\n    else if (num < 20 && num > 0) {\n      str = \"Your network status is yellow! You have \" + num + \" connections to the tertiary level. You're being relatively safe.\";\n    }\n    else if (num >= 20 && num < 40) {\n      str = \"  Your network status is orange! You have \" + num + \" connections to the tertiary level. You're being pretty unsafe.\";\n    }\n    else {\n      str = \" Your network status is red! You have \" + num + \" connections to the tertiary level.\";\n    }\n    if (pos === 0) {\n      str += \" However, you have not come into contact with a positive user.\";\n    }\n    return str;\n  }\n  \n\n\n  async function contactTrace(username){\n      let user = username;\n      console.log(user);\n      let cache = await getCache();\n      console.log(\"flag\");\n      console.log(cache);\n      let primary = [];\n      let secondary = [];\n      let notifications = [];\n      let count = 0;\n      let riskCheck = 0;\n      let i;\n      let j;\n      \n    //notifications.push(\"You came in contact with \" + primary[i] + \" who has tested positive for covid. You need to get tested!\");\n\n      for (i = 0; i < cache.length; i++) { //set up primary connections\n        //console.log()\n        if(cache[i].user1 === user && cache[i].user2 != user) { //all conn where main user is user1\n          primary.push(cache[i].user2);\n          count++;\n          if (cache[i].user2status === \"positive\") {\n            notifications.push(\"You came in primary contact with \" + cache[i].user2 + \" who has tested positive for covid. You need to get tested!\");\n            riskCheck = 1;\n          }\n        }\n        console.log(primary);\n        \n      }\n      for (i = 0; i < cache.length; i++) { //set up secondary connections\n        for (j = 0; j < primary.length; j++) { //all conn where primary connection is user1\n          if(cache[i].user1 === primary[j] && primary[j] != user && cache[i].user2 != user) {\n            secondary.push(cache[i].user2);\n            count++;\n            if (cache[i].user2status === \"positive\") {\n              notifications.push(\"You came in secondary contact with \" + cache[i].user2 + \" who has tested positive for covid. You need to get tested!\");\n              riskCheck = 1;\n            }\n          }\n        }\n      }\n\n      for (i = 0; i < cache.length; i++) { //set up tertiary connections\n        for (j = 0; j < secondary.length; j++) { \n          if(cache[i].user1 === secondary[j] && secondary[j] != user && cache[i].user2 != user) {\n            count++;\n            if (cache[i].user2status === \"positive\") {\n              notifications.push(\"You came in tertiary contact with \" + cache[i].user2 + \" who has tested positive for covid. You need to get tested!\");\n              riskCheck = 1;\n            }\n            j = secondary.length; //removes chance of dupes\n          }\n        }\n      }\n\n      \n      if (riskCheck === 1) {\n        updateRisk(user);\n      }\n      //console.log(networkStatus(count, notifications.length));\n      notifications.unshift(networkStatus(count, notifications.length));\n      console.log(\"flag-notifications\");\n      console.log(notifications);\n      return notifications;\n  }\n\n  //look at documentation to set state to notif\n\n  const ContactTrace = ({updateContactTrace}) => {\n    //const [myContactTrace, updateContactTrace] = useState(username)\n    //use setState if this doesn't work\n    const [notif, setNotif] = useState([]);\n    //const [retDat, setRetDat] = useState([]);\n      const onSubmitForm = async e => {\n          e.preventDefault();\n          const ct = await contactTrace(updateContactTrace);\n          setNotif(ct);\n          console.log(ct);\n          console.log(\"flag-notif\");\n          console.log(notif);\n      }\n    return (\n      //html here\n      <Fragment>\n        <div className = \"CT\">\n          <div className = \"populated\">\n            {/* {notif.forEach(function(x){\n              return <li> {x} </li>; //should return html elements\n            }) */}\n            {notif.map((x) => <li key = \"{x}\">{x}</li>)}\n          </div>\n          <button className = \"btn btn-success btn-block\" onClick = {onSubmitForm}> Contact Trace! </button>\n        </div>\n      </Fragment>\n    )\n    }\n\n    export default ContactTrace;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/Connects.js",["70","71","72","73","74","75","76","77"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// import { toast } from \"react-toastify\";\n\n//refresh doesn't work\n\nconst Connects = (updateConnects, connects) => {\n    const [myConnects, updateMyConnects] = useState(connects)\n    const [inputs, setInputs] = useState({\n        user1: \"\",\n        user2: \"\",\n        user3: \"\"\n      });\n    const { user1, user2, user3 } = inputs;\n\n    const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\nconst onSubmitFormA = async e => {\n    e.preventDefault();\n    try {\n        const body = { user1: localStorage.getItem(\"token\"), user2 };\n        const response = await fetch(\n          \"http://localhost:3001/other/add\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }\n        );\n        // if (response.status === 200) {\n        //   updateConnects(myConnects);\n        // }\n      } catch (err) {\n        console.error(err.message);\n      }\n  };\n\n  const onSubmitFormB = async e => {\n    e.preventDefault();\n    try {\n        const body = { user1: localStorage.getItem(\"token\"), user2, user3 };\n        const response = await fetch(\n          \"http://localhost:3001/other/edit\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }\n        );\n        // if (response.status === 200) {\n        //   updateConnects(myConnects);\n        // }\n      } catch (err) {\n        console.error(err.message);\n      }\n  };\n\n  const onSubmitFormC = async e => {\n    e.preventDefault();\n    try {\n        const body = { user1: localStorage.getItem(\"token\"), user2 };\n        const response = await fetch(\n          \"http://localhost:3001/other/delete\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }\n        );\n        // if (response.status === 200) {\n        //   updateConnects(myConnects);\n        // }\n      } catch (err) {\n        console.error(err.message);\n      }\n  };\n\n  return (\n    <Fragment>\n    <h3 className=\"mt-5\">Add Contact</h3>\n    <form onSubmit={onSubmitFormA}>\n      <input\n        type=\"text\"\n        name=\"user2\"\n        value={user2}\n        placeholder=\"username\"\n        onChange={e => onChange(e)}\n        className=\"form-control my-3\"\n      />\n      <button className=\"btn btn-success btn-block\">Submit</button>\n    </form>\n    <h3 className=\"mt-5\">Edit Contact</h3>\n    <form onSubmit={onSubmitFormB}>\n      <input\n        type=\"text\"\n        name=\"user2\"\n        value={user2}\n        placeholder=\"old username\"\n        onChange={e => onChange(e)}\n        className=\"form-control my-3\"\n      />\n        <input\n        type=\"text\"\n        name=\"user3\"\n        value={user3}\n        placeholder=\"new username\"\n        onChange={e => onChange(e)}\n        className=\"form-control my-3\"\n      />\n      <button className=\"btn btn-success btn-block\">Submit</button>\n    </form>\n    <h3 className=\"mt-5\">Delete Contact</h3>\n    <form onSubmit={onSubmitFormC}>\n      <input\n        type=\"text\"\n        name=\"user2\"\n        value={user2}\n        placeholder=\"username\"\n        onChange={e => onChange(e)}\n        className=\"form-control my-3\"\n      />\n      <button className=\"btn btn-success btn-block\">Submit</button>\n    </form>\n  </Fragment>\n  );\n};\n\nexport default Connects;","/Users/justincomputer/Documents/GitHub/creativeproject-mod7-474190-475569/client/src/components/CheckUser.js",["78","79","80","81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":59,"column":37,"nodeType":"92","messageId":"93","endLine":59,"endColumn":46},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":33,"column":27,"nodeType":"97","messageId":"98","endLine":33,"endColumn":29},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":31,"column":27,"nodeType":"97","messageId":"98","endLine":31,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":94,"column":6,"nodeType":"101","endLine":94,"endColumn":8,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":100,"column":13,"nodeType":"97","messageId":"98","endLine":100,"endColumn":15},{"ruleId":"95","severity":1,"message":"104","line":151,"column":58,"nodeType":"97","messageId":"98","endLine":151,"endColumn":60},{"ruleId":"95","severity":1,"message":"104","line":164,"column":62,"nodeType":"97","messageId":"98","endLine":164,"endColumn":64},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"105","line":9,"column":12,"nodeType":"92","messageId":"93","endLine":9,"endColumn":22},{"ruleId":"90","severity":1,"message":"106","line":9,"column":24,"nodeType":"92","messageId":"93","endLine":9,"endColumn":40},{"ruleId":"90","severity":1,"message":"107","line":15,"column":13,"nodeType":"92","messageId":"93","endLine":15,"endColumn":18},{"ruleId":"90","severity":1,"message":"108","line":24,"column":15,"nodeType":"92","messageId":"93","endLine":24,"endColumn":23},{"ruleId":"90","severity":1,"message":"108","line":46,"column":15,"nodeType":"92","messageId":"93","endLine":46,"endColumn":23},{"ruleId":"90","severity":1,"message":"108","line":68,"column":15,"nodeType":"92","messageId":"93","endLine":68,"endColumn":23},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":74,"column":13,"nodeType":"97","messageId":"98","endLine":74,"endColumn":15},{"ruleId":"95","severity":1,"message":"104","line":111,"column":58,"nodeType":"97","messageId":"98","endLine":111,"endColumn":60},{"ruleId":"95","severity":1,"message":"104","line":122,"column":60,"nodeType":"97","messageId":"98","endLine":122,"endColumn":62},{"ruleId":"95","severity":1,"message":"104","line":122,"column":86,"nodeType":"97","messageId":"98","endLine":122,"endColumn":88},{"ruleId":"95","severity":1,"message":"104","line":134,"column":64,"nodeType":"97","messageId":"98","endLine":134,"endColumn":66},{"ruleId":"95","severity":1,"message":"104","line":134,"column":90,"nodeType":"97","messageId":"98","endLine":134,"endColumn":92},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'myConnects' is assigned a value but never used.","'updateMyConnects' is assigned a value but never used.","'user1' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [getProfile]",{"range":"114","text":"115"},[2600,2602],"[getProfile]"]